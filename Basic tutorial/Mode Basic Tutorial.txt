/*
Selecting all of the columsn of the table
*/

-- SELECT 
--   FROM tutorial.us_housing_units

/*
Selecting yea, month and west of housing_units
*/

-- SELECT year,
--       month,
--       west
--   FROM tutorial.us_housing_units
  
/*
Write a query to select all of the columns in the tutorial.us_housing_units table without using *
*/

-- select midwest, month, month_name, northeast, south, west, year
-- from tutorial.us_housing_units;

/*
using limit
*/

-- SELECT
--   FROM tutorial.us_housing_units
-- LIMIT 100

/*
using operator over numerical columns
*/

-- SELECT *
--   FROM tutorial.us_housing_units
-- WHERE west > 30

/*
Using operators over non-nuerical columns
*/

-- SELECT *
--   FROM tutorial.us_housing_units
-- WHERE month_name != 'January'

/* 
Write a query that only shows rows for which the month name is February.
*/

-- Select *
-- From tutorial.us_housing_units
-- Where month_name = 'February';

/*
Filtering by months minor or equal (alphabetically) to N
*/
-- SELECT *
--   FROM tutorial.us_housing_units
-- WHERE month_name <= 'N'
/*
sum of west plus south
*/

-- SELECT year,
--       month,
--       west,
--       south,
--       west + south AS south_plus_west
--   FROM tutorial.us_housing_units

/*
Writing a nonsense_column
west + sough - (4 * year)
*/

-- SELECT year,
--       month,
--       west,
--       south,
--       west + south - 4 * year AS nonsense_column
--   FROM tutorial.us_housing_units

/* 
Write a query that calculates the sum of all four regions in a separate column.
*/

-- Select *,
--       west + south + northeast + midwest as Sum_of_regions
-- From tutorial.us_housing_units

/* 
average the west and south columns
*/

-- SELECT year,
--       month,
--       west,
--       south,
--       (west + south)/2 AS south_west_avg
--   FROM tutorial.us_housing_units

/* 
Write a query that returns all rows for which more units were produced
in the West region than in the Midwest and Northeast combined.
*/

-- SELECT year,
--       month,
--       west,
--       south,
--       midwest,
--       northeast
--   FROM tutorial.us_housing_units
--   WHERE west > (midwest + northeast)

/*
Write a query that calculates the percentage of all houses completed 
in the United States represented by each region. Only return results 
from the year 2000 and later
*/

-- SELECT year,
--       month,
--       west/(west + south + midwest + northeast)*100 AS west_pct,
--       south/(west + south + midwest + northeast)*100 AS south_pct,
--       midwest/(west + south + midwest + northeast)*100 AS midwest_pct,
--       northeast/(west + south + midwest + northeast)*100 AS northeast_pct
--   FROM tutorial.us_housing_units
-- WHERE year >= 2000

-- SELECT *
--   FROM tutorial.billboard_top_100_year_end
-- ORDER BY year DESC, year_rank

/*
Proving that Like function is case-sensitive
*/

-- SELECT *
--   FROM tutorial.billboard_top_100_year_end
-- WHERE "group" ILIKE 'snoop%'

/*
Using ILIKE and wildcare underscore ("_")
*/

-- SELECT *
--   FROM tutorial.billboard_top_100_year_end
-- WHERE artist ILIKE 'dr_ke'

/*
Write a query that returns all rows for which Ludacris was a  member of the group.
*/

-- Select *
-- From tutorial.billboard_top_100_year_end
-- Where "group" ilike '%Ludacris%'

/*
Query that returns all rows for which the first artist listed in the group 
has a name that begin with “DJ”
*/

-- Select *
-- From tutorial.billboard_top_100_year_end
-- Where "group" like 'DJ%'

/*
Write a query that shows all of the entries for Elvis and M.C. Hammer.
*/

-- SELECT *
--   FROM tutorial.billboard_top_100_year_end
-- WHERE "group" IN ('M.C. Hammer', 'Hammer', 'Elvis Presley')

/*
Write a query that shows all top 100 songs from January 1, 1985 through December 31, 1990.
*/

-- Select *
-- FROM tutorial.billboard_top_100_year_end
-- Where year BETWEEN 1985 AND 1990

/*
Write a query that shows all of the rows for which song_name is null.
*/

-- Select *
-- From tutorial.billboard_top_100_year_end
-- Where song_name is null

/*
Write a query that surfaces all rows for top-10 hits for which Ludacris is part of the Group.
*/

-- Select *
-- FROM tutorial.billboard_top_100_year_end
-- Where year_rank <= 10 and "group" ilike '%Ludacris%'

/*
Write a query that surfaces the top-ranked records in 1990, 2000, and 2010.
*/

-- SELECT *
--   FROM tutorial.billboard_top_100_year_end
-- WHERE year_rank = 1
--   AND year IN (1990, 2000, 2010)

/*
Write a query that lists all songs from the 1960s with "love" in the title.
*/

-- Select *
-- From tutorial.billboard_top_100_year_end
-- Where year >= 1960 and 
--       year < 1970 and 
--       song_name ilike '%love%'

/*
Write a query that returns all rows for top-10 songs that featured either Katy Perry or Bon Jovi.
*/

-- SELECT *
--       FROM tutorial.billboard_top_100_year_end
--     WHERE year_rank <= 10
--       AND ("group" ILIKE '%katy perry%' OR "group" ILIKE '%bon jovi%')

/*
Write a query that returns all songs with titles that contain the word "California" in either the 1970s or 1990s.
*/

-- SELECT *
--   FROM tutorial.billboard_top_100_year_end
-- WHERE song_name LIKE '%California%'
--   AND (year BETWEEN 1970 AND 1979 OR year BETWEEN 1990 AND 1999)

/*
Write a query that lists all top-100 recordings that feature Dr. Dre before 2001 or after 2009.
*/

-- SELECT *
--   FROM tutorial.billboard_top_100_year_end
-- WHERE "group" ILIKE '%dr. dre%'
--   AND (year <= 2000 OR year >= 2010)

/*
Write a query that returns all rows for songs that were on the charts in 2013 and do not contain the letter "a".
*/

-- SELECT *
--       FROM tutorial.billboard_top_100_year_end
--     WHERE song_name NOT ILIKE '%a%'
--       AND year = 2013

/*
Write a query that returns all rows from 2012, ordered by song title from Z to A.
*/

-- Select *
-- From tutorial.billboard_top_100_year_end
-- Where year >= 2012
-- ORDER BY song_name DESC

-- SELECT *
--   FROM tutorial.billboard_top_100_year_end
-- WHERE year_rank <= 3
-- ORDER BY 2, 1 DESC

/*
Write a query that returns all rows from 2010 ordered by rank, with artists ordered alphabetically for each song.
*/

-- Select *
-- From tutorial.billboard_top_100_year_end
-- Where year = 2010
-- Order by year_rank, artist

/*
Write a query that shows all rows for which T-Pain was a group member, ordered by rank on the 
charts, from lowest to highest rank (from 100 to 1).
*/


  -- Select *
  -- FROM tutorial.billboard_top_100_year_end
  -- Where "group" ilike '%T-Pain%'
  -- Order by year_rank DESC

/*
Write a query that returns songs that ranked between 10 and 20 (inclusive) in 1993, 2003, or 2013. 
Order the results by year and rank, and leave a comment on each line of the WHERE clause to indicate what that line does
*/

-- Select *
-- From tutorial.billboard_top_100_year_end
-- Where year_rank Between 10 and 20 AND --to filter rank between 10 and 2
--       year in (1993, 2003, 2013) --to restrict the years to 1993, 2003 and 2013
-- Order By year, year_rank